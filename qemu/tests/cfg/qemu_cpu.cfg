- qemu_cpu:
    virt_test_type = qemu
    type = cpuid
    start_vm = "no"
    smp = 1
    # ask autotest to not mess with the cpu_model settings
    auto_cpu_model = no

    # host versions:
     variants:
        - unknown_host:
        - rhel64:
        - qemu13:

    # uncomment the line corresponding to the host version, if you know it:
    only unknown_host
    #only rhel64
    #only qemu13

    variants:
        - check_models:
            test_type = "test_qemu_cpu_models_list"
            cpu_models = "qemu64 phenom core2duo kvm64 qemu32"
            cpu_models += " coreduo 486 pentium pentium2"
            cpu_models += " pentium3 athlon n270 Conroe Penryn"
            cpu_models += " Nehalem Westmere SandyBridge Haswell"
            cpu_models += " Opteron_G1 Opteron_G2 Opteron_G3"
            cpu_models += " Opteron_G4 Opteron_G5"
            rhel64:
                cpu_models += " cpu64-rhel6 cpu64-rhel5"
            qemu13:
                cpu_models += " kvm32"
        - default.vendor:
            test_type = "default_vendor"
            variants:
                - kvm:
                    # when KVM is enabled, all CPU models have vendor set
                    # to match host, by default
                    cpu_models = "*"
                    # 486 is excluded due to not supporting cpuid
                    ignore_cpu_models = "486"
                    # if 'vendor' is missing then host's vendor value is used
                    # kvm by default overides vendor with host's value
                - nokvm:
                    enable_kvm = "no"
                    disable_kvm = "yes"
                    variants:
                        - intel:
                            vendor = "GenuineIntel"
                            cpu_models = "core2duo kvm64 qemu32"
                            cpu_models += " coreduo pentium pentium2"
                            cpu_models += " pentium3 n270 Conroe Penryn"
                            cpu_models += " Nehalem Westmere"
                            cpu_models += " SandyBridge Haswell"
                        - amd:
                            vendor = "AuthenticAMD"
                            cpu_models = "qemu64 phenom athlon"
                            cpu_models += " Opteron_G1 Opteron_G2"
                            cpu_models += " Opteron_G3 Opteron_G4"
                            cpu_models += " Opteron_G5"
                            rhel64:
                                cpu_models += " cpu64-rhel6 cpu64-rhel5"
        # CPUID data tests:
        - cpuid.custom:
            variants:
                - vendor:
                    test_type = "custom_vendor"
                    variants:
                        - normal:
                            vendor = "QWERasdfZXCV"
                        - tooshort:
                            vendor = "Q"
                            xfail = "yes"
                        - empty:
                            xfail = "yes"
                            vendor = ""
                - level:
                    test_type = "custom_level"
                    variants:
                        - level5:
                            level = 5
                        - NaN:
                            xfail = "yes"
                            level = "five"
                - family:
                    test_type = "custom_family"
                    variants:
                        - family6:
                            family = 6
                        - ext:
                            family = 21
                        - max:
                            # 0xff + 0xf = 270
                            family = 270
                        - NaN:
                            xfail = "yes"
                            family = foo
                        - out_of_range:
                            xfail = "yes"
                            family = 271
                - model:
                    test_type = "custom_model"
                    variants:
                        - model15:
                            model = 15
                        - max:
                            model = 255
                        - out_of_range:
                            xfail = "yes"
                            model = 256
                        - NaN:
                            xfail = "yes"
                            model = foo
                - stepping:
                    test_type = "custom_stepping"
                    variants:
                        - stepping5:
                            stepping = 5
                        - max:
                            stepping = 15
                        - out_of_range:
                            xfail = "yes"
                            stepping = 16
                        - Nan:
                            xfail = "yes"
                            stepping = foo
                - xlevel:
                    test_type = "custom_xlevel"
                    variants:
                        - fixup:
                            # fix me when fixup in QEMU is removed
                            xlevel = 5
                            # expect fixup to 0x80000005
                            expect_xlevel = 2147483653
                        - level80000001:
                            # xlevel = 0x80000001
                            xlevel = 2147483649
                        - supported_max:
                            # xlevel = 0x8000000A
                            xlevel = 2147483658
                        - Nan:
                            xfail = "yes"
                            xlevel = foo
                - model_id:
                    test_type = "custom_model_id"
                    model_id = "QEMU CPU Brand by virt-test"
